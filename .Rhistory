for(i in 1:NCOL(df_first_ts)){
for(j in (i+1):NCOL(df_first_ts))
ccf(train[,i], train[,j],
main = paste0(colnames(df_first_ts)[i], colnames(df_first_ts)[j]))
}
par(mfrow = c(1,1))
# 2) ADF ----------------------------------
library(urca)
?ur.df
ur.df(train, type = "trend",
selectlags = "BIC")
colnames(train)
ur.df(train[,"Italy"], type = "trend",
selectlags = "BIC")
library(dplyr)
ur.df(train[,"Italy"], type = "trend",
selectlags = "BIC") %>% summary
ur.df(train[,"Italy"], type = "trend",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Italy"], type = "drift",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Italy"], type = "none",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"France"], type = "trend",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"France"], type = "drift",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Italy"], type = "trend",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Italy"], type = "drift",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Italy"], type = "drift",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Italy"], type = "none",
selectlags = "BIC",
lags = 12) %>% summary
par(mfrow = c(3,1))
train[,"Italy"] %>% plot
train[,"Italy"] %>% acf
train[,"Italy"] %>% pacf
train[,"Italy"] %>% diff %>% plot
train[,"Italy"] %>% diff %>% acf
train[,"Italy"] %>% diff %>% pacf
ur.df(train[,"France"], type = "trend",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"France"], type = "drift",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"France"], type = "none",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Spain"], type = "trend",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"France"], type = "drift",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Spain"], type = "drift",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Germany"], type = "trend",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Spain"], type = "none",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Germany"], type = "trend",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Germany"], type = "drift",
selectlags = "BIC",
lags = 12) %>% summary
ur.df(train[,"Germany"], type = "none",
selectlags = "BIC",
lags = 12) %>% summary
# 3) r = 1 ----------------------------------
library(dols)
# 3) r = 1 ----------------------------------
library(dynlm)
# stima ols
ols_est = lm(train[,"Italy"] ~ train[,"France"] +
train[,"Spain"] + train[,"Germany"])
# controlliamo la significatività dei parametri
summary(ols_est)
?dynlm
library(forecast)
library(vars)
library(dynlm)
#> Nel file Consumi.csv sono raccolti i dati trimestrali sui consumi energetici per 27
#> paesi dell’unione europea a partire dal primo trimestre del 1995 (1995-Q1). Il file csv
#> contiene 104 righe e 28 colonne: la prima riga contiene l’intestazione di ciascuna colonna
#> e la prima colonna le date in formato trimestrale (ad esempio “2019-Q1”). Considerando solo
#> Italia (Italy), Francia (France), Germania (Germany) e Spagna (Spain), suddividi i dati in
#> due dataset: train con i valori osservati prima del 2018 (escluso), mentre test i valori
#> osservati dal 2018. Per i restanti quesiti utilizza solo il dataset train se non
#> richiesto diversamente.
data <- read.csv("CONSUMI.csv") # Carichiamo i dati
# Selezioniamo i quattro stati
data <- ts(data[, c("Italy", "France", "Germany", "Spain")],
start = c(1995, 1), frequency = 4)
train <- window(data, end = c(2017, 4))
test <- window(data, start = c(2018, 1))
Italy <- train[, "Italy"]
France <- train[, "France"]
Germany <- train[, "Germany"]
Spain <- train[, "Spain"]
#> 1.
#> Fare una breve analisi descrittiva delle serie storiche (grafico, ACF, PACF, . . . ). Commentare.
par(mfrow = c(2, 2))
plot(Italy)
plot(France)
plot(Germany)
plot(Spain)
par(mfrow = c(1, 1))
# Grafico ACF
par(mfrow = c(2,2))
for(i in 1:NCOL(data)){
acf(data[, i], main = colnames(data)[i])
}
par(mfrow = c(1,1))
# Grafico PACF
par(mfrow = c(2,2))
for(i in 1:NCOL(data)){
pacf(data[, i], main = colnames(data)[i])
}
par(mfrow = c(1,1))
summary(ur.df(Italy, type="trend", lags=4, selectlags = "BIC"))
summary(ur.df(Italy, type="trend", lags=4, selectlags = "BIC"))
# NR, R, NR
summary(ur.df(Italy, type="drift", lags=4, selectlags = "BIC"))
summary(ur.df(France, type="trend", lags=4, selectlags = "BIC"))
# NR R NR
summary(ur.df(France, type="drift", lags=4, selectlags = "BIC"))
summary(ur.df(Germany, type="trend", lags=4, selectlags = "BIC"))
# NR R NR
summary(ur.df(Germany, type="drift", lags=4, selectlags = "BIC"))
summary(ur.df(Spain, type="trend", lags=4, selectlags = "BIC"))
# NR NR NR
summary(ur.df(Spain, type="drift", lags=4, selectlags = "BIC"))
# NR NR
summary(ur.df(Spain, type="none", lags=4, selectlags = "BIC"))
summary(ur.df(diff(Italy)))
summary(ur.df(diff(France)))
summary(ur.df(diff(Germany)))
summary(ur.df(diff(Spain)))
# ols
ols <- lm(Italy~France+Germany+Spain)
summary(ols)
res <- ts(residuals(ols), start = c(1993, 11), frequency = 12)
summary(ur.df(res, lags=0, type="none"))
#' Rifiutiamo la presenza di radice unitaria nei residui, allora vi è un vettore di
#' cointegrazione pari a Italia = 1, Francia =  0.53, Germania = -0.16 e Spagna = 0.58.
#' Abbiamo deciso di lasciare l'intercetta pari a 66772.16
coef(ols)
par(mfrow = c(3, 1))
plot.ts(res, main = "Residui OLS")
acf(res, main = "Residui OLS")
pacf(res, main = "Residui OLS")
par(mfrow = c(1, 1))
popt <- ceiling((1/3)*(length(Italy))^(1/3))
popt <- ceiling((1/3)*(length(Italy))^(1/3))
popt
dols <- dynlm(Italy ~ France + Germany + Spain +
L(d(France), -popt:popt) + L(d(Germany), -popt:popt) + L(d(Spain), -popt:popt))
summary(dols)
dres <- ts(residuals(dols), start = c(1993, 11), frequency = 12)
par(mfrow = c(3, 1))
plot.ts(dres, main = "Residui OLS")
acf(dres, main = "Residui OLS")
pacf(dres, main = "Residui OLS")
par(mfrow = c(1, 1))
summary(ur.df(dres))
summary(ur.df(dres))
#' Rifiutiamo la presenza di radice unitaria nei residui, allora vi è un vettore di
#' cointegrazione pari a Italia = 1, Francia = 0.25, Germani = -0.26 e Spagna = 0.48.
#' Abbiamo deciso di lasciare l'intercetta pari a 7026.64.
coef(dols)[c("(Intercept)", "France", "Germany", "Spain")]
par(mfrow = c(3, 1))
plot.ts(dres, main = "Residui dOLS")
acf(dres, main = "Residui dOLS")
pacf(dres, main = "Residui dOLS")
par(mfrow = c(1, 1))
#> 4.
#> Utilizzando la stima OLS, stimare il modello di correzione dell’errore (Error Correction Model).
#> Indicare le relazioni di breve periodo e la velocità di aggiustamento verso l’equilibrio.
ect <- Italy-cbind(1, France, Germany, Spain)%*%coef(ols)
# Costruiamo allora l'Error Correction Model
ECM <- dynlm(d(Italy) ~  d(France) + d(Germany) + d(Spain) + L(ect))
summary(ECM)
VARselect(train)
vecm <- ca.jo(train, K = 2, type = "trace")
summary(vecm)
plotres(vecm) #effettua l'analisi delle acf empiriche dei residui
vecm1$beta
#> 6.
#> Normalizzando per il consumo italiano, costruire il vettore di cointegrazione per r = 1
#> utilizzando la rappresentazione VECM.
vecm1 <- cajorls(vecm, r = 1)
vecm1$beta
summary(vecm)
?cajorls
?ca.jo
vecm1$beta
summary(vecm)
#> 7.
#> Costruire la rappresentazione VAR del modello VECM stimato al punto precedente e calcolare
#> le previsioni per il test. Fare il grafico per le previsioni puntuali italiane in cui si
#> vedono anche i veri valori osservati durante quel periodo. Commentare.
modVAR <- vec2var(vecm, r = 1)
modVAR
prev <- predict(modVAR, n.ahead = NROW(test))
italy_prev <- prev$fcst$Italy[,1]
plot(as.numeric(test[, "Italy"]), type = "l", ylim = c(220000, 280000))
lines(italy_prev, col = 2)
setwd("C:/Users/pietr/OneDrive - Università degli Studi di Padova/UNI/Corsi/Magistrale/Secondo Anno/Primo semestre/Modelli statistici per dati economici/Lab/Simulazione prova pratica-20250528")
library(readxl)
library(urca)
library(readxl)
library(urca)
m3 <- read_xlsx("3M.xlsx")
head(m3)
m3 <- read_xlsx("3M.xlsx")
low = ts(m3$Low)
high = ts(m3$High)
head(low)
low
high
par(mfrow = c(2,3))
plot(low, main = "low")
acf(low, main = "low")
pacf(low, main = "low")
plot(high, main = "high")
acf(high, main = "high")
pacf(high, main = "high")
par(mfrow = c(1,1))
par(mfrow = c(1,1))
ccf(low, high)
library(dplyr)
library(dplyr)
?ur.df
summary(ur.df(low, type = "trend", lags = 12,
selectlags = "BIC"))
warnings()
ccf(low, high.ts)
library(readxl)
library(urca)
library(dplyr)
library(readxl)
library(urca)
library(dplyr)
m3 <- read_xlsx("3M.xlsx")
low.ts = ts(m3$low.ts)
m3 <- read_xlsx("3M.xlsx")
low.ts = ts(m3$low)
m3 <- read_xlsx("3M.xlsx")
low.ts = ts(m3$low)
setwd("C:/Users/pietr/OneDrive - Università degli Studi di Padova/UNI/Corsi/Magistrale/Secondo Anno/Primo semestre/Modelli statistici per dati economici/Lab/Simulazione prova pratica-20250528")
library(readxl)
library(urca)
library(dplyr)
m3 <- read_xlsx("3M.xlsx")
low.ts = ts(m3$low)
m3 <- read_xlsx("3M.xlsx")
low.ts = ts(m3$Low)
high.ts = ts(m3$High)
par(mfrow = c(2,3))
plot(low.ts, main = "low.ts")
acf(low.ts, main = "low.ts")
pacf(low.ts, main = "low.ts")
plot(high.ts, main = "high.ts")
acf(high.ts, main = "high.ts")
pacf(high.ts, main = "high.ts")
par(mfrow = c(1,1))
ccf(low.ts, high.ts)
summary(ur.df(low.ts, type = "trend", lags = 12,
selectlags = "BIC"))
summary(ur.df(low.ts, type = "drift", lags = 12,
selectlags = "BIC"))
summary(ur.df(low.ts, type = "none", lags = 12,
selectlags = "BIC"))
summary(ur.df(diff(low.ts), type = "none", lags = 1))
m3 <- read_xlsx("3M.xlsx")
low.ts = ts(log(m3$Low))
high.ts = ts(log(m3$High))
par(mfrow = c(2,3))
plot(low.ts, main = "low.ts")
acf(low.ts, main = "low.ts")
pacf(low.ts, main = "low.ts")
plot(high.ts, main = "high.ts")
acf(high.ts, main = "high.ts")
pacf(high.ts, main = "high.ts")
par(mfrow = c(1,1))
ccf(low.ts, high.ts)
summary(ur.df(low.ts, type = "trend", lags = 12,
selectlags = "BIC"))
summary(ur.df(low.ts, type = "drift", lags = 12,
selectlags = "BIC"))
summary(ur.df(low.ts, type = "none", lags = 12,
selectlags = "BIC"))
summary(ur.df(diff(low.ts), type = "none", lags = 1))
summary(ur.df(high.ts, type = "trend", lags = 12,
selectlags = "BIC"))
summary(ur.df(high.ts, type = "drift", lags = 12,
selectlags = "BIC"))
summary(ur.df(high.ts, type = "none", lags = 12,
selectlags = "BIC"))
summary(ur.df(diff(high.ts), type = "none", lags = 1))
library(readxl)
library(urca)
library(dplyr)
rm(list = ls())
m3 <- read_xlsx("3M.xlsx")
low.ts = ts(log(m3$Low))
high.ts = ts(log(m3$High))
par(mfrow = c(2,3))
plot(low.ts, main = "low.ts")
acf(low.ts, main = "low.ts")
pacf(low.ts, main = "low.ts")
plot(high.ts, main = "high.ts")
acf(high.ts, main = "high.ts")
pacf(high.ts, main = "high.ts")
par(mfrow = c(1,1))
ccf(low.ts, high.ts)
summary(ur.df(low.ts, type = "trend", lags = 12,
selectlags = "BIC"))
summary(ur.df(low.ts, type = "drift", lags = 12,
selectlags = "BIC"))
summary(ur.df(low.ts, type = "none", lags = 12,
selectlags = "BIC"))
summary(ur.df(diff(low.ts), type = "none", lags = 1))
summary(ur.df(high.ts, type = "trend", lags = 12,
selectlags = "BIC"))
summary(ur.df(high.ts, type = "drift", lags = 12,
selectlags = "BIC"))
summary(ur.df(high.ts, type = "none", lags = 12,
selectlags = "BIC"))
summary(ur.df(diff(high.ts), type = "none", lags = 1))
ols.
ols.fit = lm(low.ts ~ high.ts)
library(dynlm)
lagmax = ceiling(1/3 * length(low.ts)^(1/3))
lagmax
ols.fit = lm(low.ts ~ high.ts)
# scegliamo il ritardo massimo euristicamente
lagmax = ceiling(1/3 * length(low.ts)^(1/3))
dlos.fit = dynlm(low.ts ~ L(high.ts, -lagmax:lagmax))
res.ols = residuals(ols.fit)
res.dols = residuals(dols.fit)
dlos.fit = dynlm(low.ts ~ L(high.ts, -lagmax:lagmax))
res.dols = residuals(dols.fit)
dols.fit = dynlm(low.ts ~ L(high.ts, -lagmax:lagmax))
res.dols = residuals(dols.fit)
par(mfrow = c(3,1))
plot(res.ols, main = "res ols")
acf(res.ols, main = "res ols")
pacf(res.ols, main = "res ols")
par(mfrow = c(1,1))
par(mfrow = c(3,1))
plot(res.ols, main = "res ols")
acf(res.ols, main = "res ols")
pacf(res.ols, main = "res ols")
par(mfrow = c(1,1))
res.ols = ts(residuals(ols.fit))
res.dols = ts(residuals(dols.fit))
par(mfrow = c(3,1))
plot(res.ols, main = "res ols")
acf(res.ols, main = "res ols")
pacf(res.ols, main = "res ols")
par(mfrow = c(1,1))
par(mfrow = c(3,1))
plot(res.dols, main = "res dols")
acf(res.dols, main = "res dols")
pacf(res.dols, main = "res dols")
par(mfrow = c(1,1))
ols.fit %>% summary
dols.fit %>% summary
ols.fit = lm(low.ts ~ high.ts)
res.ols = ts(residuals(ols.fit))
# scegliamo il ritardo massimo euristicamente
lagmax = ceiling(1/3 * length(low.ts)^(1/3))
dols.fit = dynlm(low.ts ~ high.ts + L(res.ols, -lagmax:lagmax))
res.dols = ts(residuals(dols.fit))
par(mfrow = c(3,1))
plot(res.ols, main = "res ols")
acf(res.ols, main = "res ols")
pacf(res.ols, main = "res ols")
par(mfrow = c(1,1))
par(mfrow = c(3,1))
plot(res.dols, main = "res dols")
acf(res.dols, main = "res dols")
pacf(res.dols, main = "res dols")
par(mfrow = c(1,1))
head(res.dols)
ols.fit %>% summary
dols.fit %>% summary
summary(ur.df(res.ols, type = "trend"))
summary(ur.df(res.ols, type = "trend",
selectlags = "BIC"))
summary(ur.df(res.ols, type = "trend",
selectlags = "BIC", lags = 12))
summary(ur.df(res.dols, type = "trend",
selectlags = "BIC", lags = 12))
coef(ols.fit)
ecm <- dynlm(diff(low.ts) ~ diff(high.ts) + L(res.ols))
summary(ecm)
library(vars)
bdf = read_xlsx("3MAAPL.xlsx")
bdf = read_xlsx("3MAAPL.xlsx")
mm = ts(log(bdf$MMM))
aa = ts(log(bdf$AAPL))
colnames(bdf)
bts = ts(log(bdf[,-1]))
head(bts)
bdf = read_xlsx("3MAAPL.xlsx")
bts = ts(log(bdf[,-1]))
par(mfrow = c(2,1))
for(i in 1:NCOL(bts)){
plot(bts[,i], main = colnames(bts)[i])
}
par(mfrow = c(1,1))
par(mfrow = c(2,1))
for(i in 1:NCOL(bts)){
acf(bts[,i], main = colnames(bts)[i])
}
par(mfrow = c(1,1))
par(mfrow = c(2,1))
for(i in 1:NCOL(bts)){
acf(bts[,i], main = colnames(bts)[i])
}
par(mfrow = c(1,1))
par(mfrow = c(2,1))
for(i in 1:NCOL(bts)){
acf(bts[,i], main = colnames(bts)[i])
}
par(mfrow = c(1,1))
par(mfrow = c(2,1))
for(i in 1:NCOL(bts)){
pacf(bts[,i], main = colnames(bts)[i])
}
par(mfrow = c(1,1))
ccf(bts)
ccf(bts[,1], bts[,2])
?bts
ccf(bts[,1], bts[,2])
bdf = read_xlsx("3MAAPL.xlsx")
bts = ts(log(bdf[,-1]))
bts = ts(log(bdf[,-1]))
### B1
Grafici
for(i in 1:NCOL(bts)){
plot(bts[,i], main = colnames(bts)[i])
}
par(mfrow = c(2,1))
for(i in 1:NCOL(bts)){
acf(bts[,i], main = colnames(bts)[i])
}
par(mfrow = c(2,1))
for(i in 1:NCOL(bts)){
pacf(bts[,i], main = colnames(bts)[i])
}
par(mfrow = c(1,1))
bdf = read_xlsx("3MAAPL.xlsx")
bts = ts(diff(log(bdf[,-1])))
bdf = read_xlsx("3MAAPL.xlsx")
bts = ts(apply(log(bdf[,-1]), 2, diff))
par(mfrow = c(2,1))
for(i in 1:NCOL(bts)){
plot(bts[,i], main = colnames(bts)[i])
}
par(mfrow = c(1,1))
par(mfrow = c(2,1))
for(i in 1:NCOL(bts)){
acf(bts[,i], main = colnames(bts)[i])
}
par(mfrow = c(1,1))
par(mfrow = c(2,1))
for(i in 1:NCOL(bts)){
pacf(bts[,i], main = colnames(bts)[i])
}
par(mfrow = c(1,1))
ccf(bts[,1], bts[,2])
ccf(bts[,1], bts[,2])
VARselect(bts, lag.max = 12, type = "const")
VARselect(bts, lag.max = 12, type = "const") %>% summary
VARselect(bts, lag.max = 12, type = "const")
mod1 = VAR(bts, p = 1, type = "const")
mod1 %>% summary
root.matrix(mod1)
roots(mod1)
var.res = res(mod1)
var.res = resid(mod1)
?Box.test
Box.test(var.res, lag = 1, type = "Ljung-Box")
var.res = residuals(mod1)
Box.test(var.res, lag = 1, type = "Ljung-Box")
head(var.res)
var.res = ts(residuals(mod1))
Box.test(var.res, lag = 1, type = "Ljung-Box")
Box.test(var.res[,1], lag = 1, type = "Ljung-Box")
Box.test(var.res[,1], lag = 1, type = "Ljung-Box")
Box.test(var.res[,2], lag = 1, type = "Ljung-Box")
Box.test(var.res[,1], lag = 5, type = "Ljung-Box")
Box.test(var.res[,2], lag = 5, type = "Ljung-Box")
